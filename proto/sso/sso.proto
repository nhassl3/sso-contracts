syntax = "proto3";

package auth;

import "third_party/googleapis/google/api/field_behavior.proto";
import "validate/validate.proto";

option go_package = "nhassl3.sso.v1;ssov1";

service Auth {
  rpc Register(RegisterRequest) returns (RegisterResponse);
  rpc Login(LoginRequest) returns (LoginResponse);
  rpc IsAdmin(IsAdminRequest) returns (IsAdminResponse);
}

message RegisterRequest {
  string email = 1 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {email: true, min_len: 1}
  ]; // Email of the user to register
  string password = 2 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {min_len: 6, max_len: 100}
  ]; // Password of the user to register
}

message RegisterResponse {
  int64 user_id = 1; // User ID of the registered user
}

message LoginRequest {
  string email = 1 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {email: true, min_len: 1}
  ]; // Email of the user to login
  string password = 2 [
    (google.api.field_behavior) = REQUIRED,
    (validate.rules).string = {min_len: 6, max_len: 100}
  ]; // Password of the user to login
  int32 app_id = 3; // ID of the application to login to
}

message LoginResponse {
  string token = 1; // Auth token of the logged in user
}

message IsAdminRequest {
  int64 user_id = 1; // User ID to validate user
}

message IsAdminResponse {
  bool is_admin = 1; // Indicates whether the user is an admin
}
